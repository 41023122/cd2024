var tipuesearch = {"pages": [{'title': 'About', 'text': '網頁:  https://41023122.github.io/cd2024/ \n 網誌:\xa0 https://41023122.github.io/cd2024/blog \n 簡報:  https://41023122.github.io/cd2024/reveal\xa0 \n 倉儲:\xa0 https://github.com/41023122/cd2024 \xa0 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'cmsimde', 'text': "SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'Replit', 'text': 'https://replit.com \n 利用 init_replit 指令安裝所需 Python 模組 chmod u+x init_replit ./init_replit \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsimde_site (not needed): git submodule update --init --recursive \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'w4教學影片分組整理', 'text': '建立個人課程倉儲與網站 \n 影片: \n \n 文檔: \n 個人downloads裡 \n https://github.com/41023122/cd2024/tree/main/downloads \n \n a_1_blog_setup \n 影片: \n \n 文檔: \n 個人downloads裡 \n https://github.com/41023122/cd2024/tree/main/downloads \n \n \n \n \n \n', 'tags': '', 'url': 'w4教學影片分組整理.html'}, {'title': 'w10w2', 'text': '根據w10作業2 閱讀結果並找 各篇論文要點摘要: \n 論文一：Construction and theoretical study of a ball balancing platform \n 來源:monica \n 結論： \n 1.通過物理構建一個作為理論演示器的裝置，進一步比較從牛頓力學中得出的實際物理和計算機模擬結果。為了進行比較，需要設計一個能夠滿足系統設定要求的滿意控制器。引入了一種比例-積分-微分控制器，用於平衡平板上的球，並進一步進行分析以確定穩定自然不穩定或半穩定系統時的限制，並研究這些限制與理論期望之間的差異。 \n 2.論文中應用的控制方式是線性的，僅能在線性控制範圍內正常運作。使用標準元件和微控制器，構建了一個能夠在平台上保持球的裝置。通過使用Arduino庫和開源代碼進行編程。因此，從研究的角度來看，看看這個裝置是否能夠在線性控制領域內正常運作。 \n 3.總結來說，這篇論文首先將涵蓋通過計算機輔助程序建立的球在平台上的理論模型，然後將理論結果與從實際構建中獲得的結果進行比較。進一步研究控制理論和系統實施時出現差異的原因。 \n \n 論文二：A real time control system for balancing a ball on a platform with FPGA parallel implementation \n 來源: PDF Chat \n 結論：这篇论文提出了一种新的PID调节器解决方案，旨在提高实时调节平台上球位置准确性的科学和实际问题。通过在FPGA上实现PID调节器并进行并行计算，成功开发了一种平衡平台上球位置的PID调节器。自然模拟验证了在平台上调节球位置准确性的提高。这项研究对于控制高速对象、具有多个受控参数的对象具有重要意义，为实时控制系统的发展提供了有益的见解。 \n \n 論文三：Simulation and Experimental Study of Ball Position Control at Biaxial Platform using State Space Approach \n 來源:monica \n 結論： \n 1.這項研究提供了三種控制結構的詳細設計和比較，用於自動穩定球在平板上的位置和球軌跡追踪：PD控制器、狀態空間反饋和狀態空間觀測器與狀態空間反饋。這三種方法都經過設計並進行實際比較。 \n 2.所有結構具有一個共同特點，即計算控制器參數的方法論。文中還包括由牛頓方法推導的球在平板上的數學模型和直流電機位置迴路控制。 \n 3.這項研究為作者提供了一個機會，創建一個教育性設置，向非技術人員解釋基本控制系統的原則，並激勵未來的學生。 \n \n 論文四 ：Design and Implementation a Ball Balancing System for Control Theory Course \n 結論：monica \n 1.是否可以僅通過線性控制設計和構建一個滿足要求的球平衡平台？ 結果取決於對“滿足要求”如何定義。研究中將滿足要求定義為第3章中設定的系統要求。結果與要求之間的比較確認，物理模型在解決時間方面滿意，但靜態誤差不滿意。關於超調，並沒有觀察到足夠準確的情況，因此無法進一步討論。 \n 2.從理論模擬和實驗結果來看，造成這些差異的因素是什麼？ 導致模擬和實際結果之間差異的因素主要是建構錯誤。無法預見和在模擬中模仿這些錯誤也不能忽視。因此，應該採取必要措施並鼓勵減少這些錯誤，如果要構建這種性質的結構。 \n 3.在穩定自然不穩定或半穩定系統時的性能限制是什麼，這些與理論預期有何不同？ 在構建一個完全功能的球平衡平台後，項目中的一些見解可能有助於回答上述問題。 \n \n 論文五 ：Ball on the plate balancing control system \n 來源: \n 結論：这篇论文描述了一个球平衡实验台的设计，该实验台可用于测试稳定和平衡控制算法，这对于海洋船舶和航空器等应用可能至关重要。基于微控制器的控制系统跟踪电阻触摸屏上的球位置，并计算位置误差，即球坐标相对于电阻玻璃中心点的位移。带有位置传感器的步进电机允许控制系统改变平台与电阻玻璃的倾斜角度，从而移动桌上的球。具有各种PID控制器的微控制器双环次级控制系统可维持球在电阻面板中心点。 \n \n 論文六：2D Ball Balancer Control using QUARC \n 來源: PDF Chat \n 結論：在這份研究中，我們成功地展示了如何使用QUARC控制2D平衡球平衡器。通過從第一原理建模系統並設計PID控制器，我們實現了穩定球的位置在平衡板上的目標。透過模擬和實際實驗，我們驗證了控制系統的有效性和性能。此外，我們探討了控制技術中的一些重要概念，如設定點權重和積分器反飽和，進一步豐富了我們對控制系統的理解。這項研究為控制工程領域提供了有價值的見解，並為未來相關研究提供了基礎。', 'tags': '', 'url': 'w10w2.html'}]};